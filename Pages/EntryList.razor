@page "/entrylist"

@using wwdt_ui.Data
@inject EntryService EntryService
@using wwdt_ui.Components;
@using System.Globalization;
@using wwdt_ui.Shared;

<h1>Entry</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (entries == null)
{
<p><em>Loading...</em></p> }
            else
            {
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Who</th>
            <th>When</th>
            <th>What</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in entries)
        {
<tr>
    <td>@entry.Id</td>
    <td>@entry.Who</td>
    <td>@entry.When</td>
    <td>@entry.What</td>
    <td><a href="/entryview?Id=@entry.Id">Edit</a></td>
    <td><button type="button" class="btn btn-danger btn-sm" @onclick="() => OpenDeleteDialog(entry)">Delete</button></td>
</tr>
}
    </tbody>
</table>}

@if (DeleteDialogOpen)
{
    <ModalDialog Title="Are you sure?"
                 Text="Do you want to delete this entry?"
                 OnClose="@OnDeleteDialogClose"
                 DialogType="ModalDialog.ModalDialogType.DeleteCancel">
    </ModalDialog>
}


@code {
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        entries = await EntryService.GetEntryAsync();
        StateHasChanged();
    }

    private Entry[] entries;

    //Delete

    private Entry _entryToDelete;

    public bool DeleteDialogOpen { get; set; }

    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            bool result = await EntryService.DeleteEntryById(_entryToDelete.Id);
            await LoadData();
            _entryToDelete = null;
        }

        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteDialog(Entry entry)
    {
        DeleteDialogOpen = true;
        _entryToDelete = entry;
        StateHasChanged();
    }
}
